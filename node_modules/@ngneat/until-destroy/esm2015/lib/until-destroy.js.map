{"version":3,"file":"until-destroy.js","sourceRoot":"","sources":["../../../../../libs/until-destroy/src/lib/until-destroy.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,YAAY,EAAE,MAAM,MAAM,CAAC;AAEpC,OAAO,EAAY,MAAM,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EACL,SAAS,EAET,4BAA4B,EAC5B,eAAe,GAChB,MAAM,aAAa,CAAC;AAErB,SAAS,WAAW,CAAC,QAAiB;IACpC,IAAI,QAAQ,YAAY,YAAY,EAAE;QACpC,QAAQ,CAAC,WAAW,EAAE,CAAC;KACxB;AACH,CAAC;AAED,SAAS,gCAAgC,CAAC,QAAe;IACvD,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC3D,CAAC;AAED,SAAS,mBAAmB,CAC1B,WAA4C,EAC5C,OAA4B;IAE5B,OAAO;;QACL,iDAAiD;QACjD,WAAW,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEtC,2DAA2D;QAC3D,gCAAgC;QAChC,4BAA4B,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;QAEhD,kDAAkD;QAClD,IAAI,OAAO,CAAC,SAAS,EAAE;YACrB,OAAO,gCAAgC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;SAClE;QAED,qDAAqD;QACrD,IAAI,OAAO,CAAC,eAAe,EAAE;YAC3B,KAAK,MAAM,QAAQ,IAAI,IAAI,EAAE;gBAC3B,IAAI,MAAA,OAAO,CAAC,SAAS,0CAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACzC,SAAS;iBACV;gBAED,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC7B;SACF;IACH,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,oCAAoC,CAC3C,IAA6D,EAC7D,OAA4B;IAE5B,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AACxF,CAAC;AAED,SAAS,YAAY,CAAI,IAAiB,EAAE,OAA4B;IACtE,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACvB,GAAG,CAAC,SAAS,GAAG,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC9D,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,UAA+B,EAAE;IAC5D,OAAO,CAAC,IAAS,EAAE,EAAE;QACnB,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;YAChB,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAC7B;aAAM;YACL,oCAAoC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACrD;QAED,eAAe,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import {\n  InjectableType,\n  ɵComponentType as ComponentType,\n  ɵDirectiveType as DirectiveType,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { PipeType, isPipe } from './ivy';\nimport {\n  getSymbol,\n  UntilDestroyOptions,\n  completeSubjectOnTheInstance,\n  markAsDecorated,\n} from './internals';\n\nfunction unsubscribe(property: unknown): void {\n  if (property instanceof Subscription) {\n    property.unsubscribe();\n  }\n}\n\nfunction unsubscribeIfPropertyIsArrayLike(property: any[]): void {\n  Array.isArray(property) && property.forEach(unsubscribe);\n}\n\nfunction decorateNgOnDestroy(\n  ngOnDestroy: (() => void) | null | undefined,\n  options: UntilDestroyOptions\n) {\n  return function (this: any) {\n    // Invoke the original `ngOnDestroy` if it exists\n    ngOnDestroy && ngOnDestroy.call(this);\n\n    // It's important to use `this` instead of caching instance\n    // that may lead to memory leaks\n    completeSubjectOnTheInstance(this, getSymbol());\n\n    // Check if subscriptions are pushed to some array\n    if (options.arrayName) {\n      return unsubscribeIfPropertyIsArrayLike(this[options.arrayName]);\n    }\n\n    // Loop through the properties and find subscriptions\n    if (options.checkProperties) {\n      for (const property in this) {\n        if (options.blackList?.includes(property)) {\n          continue;\n        }\n\n        unsubscribe(this[property]);\n      }\n    }\n  };\n}\n\nfunction decorateProviderDirectiveOrComponent<T>(\n  type: InjectableType<T> | DirectiveType<T> | ComponentType<T>,\n  options: UntilDestroyOptions\n): void {\n  type.prototype.ngOnDestroy = decorateNgOnDestroy(type.prototype.ngOnDestroy, options);\n}\n\nfunction decoratePipe<T>(type: PipeType<T>, options: UntilDestroyOptions): void {\n  const def = type.ɵpipe;\n  def.onDestroy = decorateNgOnDestroy(def.onDestroy, options);\n}\n\nexport function UntilDestroy(options: UntilDestroyOptions = {}): ClassDecorator {\n  return (type: any) => {\n    if (isPipe(type)) {\n      decoratePipe(type, options);\n    } else {\n      decorateProviderDirectiveOrComponent(type, options);\n    }\n\n    markAsDecorated(type);\n  };\n}\n"]}